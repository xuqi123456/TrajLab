syntax = "proto2";

option java_package = "whu.edu.cn.trajlab.query.coprocessor.autogenerated";
option java_outer_classname = "QueryCondition";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

enum QueryType {
  CONTAIN = 0;
  INTERSECT = 1;
}
enum QueryMethod {
  ST = 0;
  KNN = 1;
  SIMILAR = 2;
  ACCOMPANY = 3;
}

message Range {
  required bytes start = 1;
  required bytes end = 2;
  required bool contained = 3;
}

message SpatialQueryWindow {
  required string wkt = 1;
}

message TemporalQueryWindow {
  required int64 startMs = 1;
  required int64 endMs = 2;
}

message TemporalQueryWindows {
  repeated TemporalQueryWindow temporalQueryWindow = 1;
}


message STQueryRequest {
  optional QueryType spatialQueryType = 1;
  optional SpatialQueryWindow spatialQueryWindow = 2;
  optional QueryType temporalQueryType = 3;
  optional TemporalQueryWindows temporalQueryWindows = 4;
  optional string oid = 5;
  optional bool filterBeforeLookFullRow = 6;
}

message KNNQueryRequest{
  required int64 k = 1;
  required double distance = 2;
  optional bytes point = 3;
  optional bytes trajectory = 4;
  optional TemporalQueryWindow temporalQueryWindow = 5;
}
message SimilarQueryRequest{
  required double distance = 1;
  required  bytes trajectory = 2;
  optional TemporalQueryWindow temporalQueryWindow = 5;
}
message AccompanyQueryRequest{
  required double distance = 1;
  required int64 timeInterval = 2;
  required bytes trajectory = 3;
}

message QueryRequest {
  repeated Range range = 1;
  required QueryMethod queryOperation = 2;
  optional STQueryRequest st = 3;
  optional KNNQueryRequest knn = 4;
  optional SimilarQueryRequest sim = 5;
  optional AccompanyQueryRequest acc = 6;
}

message QueryResponse {
  repeated TrajectoryResult list = 1;
}

message TrajectoryResult {
  required bytes rowkey = 1;
  required bytes trajPointList = 2;
  required bytes objectId = 3;
  required bytes tid = 4;
}

service QueryService {
  rpc query(QueryRequest)
      returns (QueryResponse);
}